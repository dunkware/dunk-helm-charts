broker:
  replicaCount: 3
  resources:
    requests:
      memory: "8Gi"
      cpu: "1500m"
    limits:
      memory: "16Gi"
      cpu: "3000m"
  persistence:
    enabled: false  # Disable persistence for Kafka brokers

controller:
  replicaCount: 5
  resources:
    requests:
      memory: "2Gi"
      cpu: "1000m"
    limits:
      memory: "4Gi"
      cpu: "2000m"
  persistence:
    enabled: false  # Disable persistence for Kafka controllers

listeners:
  client:
    protocol: "PLAINTEXT"
  internal:
    protocol: "PLAINTEXT"
    name: "INTERNAL"
    advertised.listeners: "PLAINTEXT://kafka-broker-0.kafka-broker-headless.kafka.svc.cluster.local:9092, PLAINTEXT://kafka-broker-1.kafka-broker-headless.kafka.svc.cluster.local:9092, PLAINTEXT://kafka-broker-2.kafka-broker-headless.kafka.svc.cluster.local:9092"
  external:
    protocol: "PLAINTEXT"
    name: "EXTERNAL"
    
configurationOverrides:
  "delete.topic.enable": true
  "auto.create.topics.enable": true
  "group.initial.rebalance.delay.ms": 3
  "log.retention.hours": 1  # Keep logs for only 1 hour
  "log.segment.bytes": 1073741824  # 1GB log segments
  "log.retention.bytes": -1  # Unlimited retention based on size
  "log.retention.check.interval.ms": 60000  # Check every minute for old logs

externalAccess:
  enabled: true
  controller:
    service:
      type: NodePort
      port: 9094
      nodePorts:
        - 30100
        - 30101
        - 30102
        - 30103
        - 30104
  broker:
    service:
      type: NodePort
      port: 9092
      nodePorts:
        - 30000
        - 30001
        - 30002

metrics:
  jmx:
    enabled: true
    kafkaJmxPort: 5555
    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "5556"
        prometheus.io/path: "/metrics"
    containerPorts:
      metrics: 5556

provisioning:
  enabled: true
  numPartitions: 1
  replicationFactor: 1

networkPolicy:
  enabled: true